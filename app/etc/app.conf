# App configuration file
#
# For use with ConfigParser. This file is versioned so should not contain
# any private information. Create a local file as `app.local.conf` which will
# be ignored by git and at runtime will overwrite any values set in `app.conf`.


[DEFAULT]
# Global variables to be substituted in other sections when this file is
# parsed.

# Path to the repo's app directory. This will be set dynamically on app
# startup or when creating the conf object. Leave it blank here.
appDir:


[APIRequests]

retryCount: 3
retryDelay: 5

# See Result Type section of docs/twitter_api_docs/search.md
searchResultsType: mixed


[SQL]
# SQLite database configuration.

# Create database files in this directory.
dbDir: %(appDir)s/var/lib/db
# Point the application to this as the current database file path.
# The file will be created it is does not exist yet.
dbPath: %(dbDir)s/db.sqlite


[Data]
# Name of unversioned file, which should created from recent Twitter API
# location data.
locations: %(appDir)s/var/locations_data.json
# Name of static file to use as demo data.
locationsSample: %(appDir)s/var/sample/locations_data.json


[Logging]
# Log file output configuration.

path: %(appDir)s/var/log/app.log

# For debugging purposes, set this True to log from DEBUG level (the lowest)
# and above. Otherwise the app logs less, from INFO level and above.
debug: False


[Staging]
# Configure the staging area, so CSV files can be placed there when fetching
# data from the Twitter API and then processed later.

stagingDir: %(appDir)s/var/lib/staging
# Outpath path for the fetchProfiles utility.
fetchProfiles: %(stagingDir)s/fetchProfiles.csv
# Outpath path for the fetchTweets utility.
fetchTweets: %(stagingDir)s/fetchTweets.csv
# Output path for the lookupAndStoreTweets utility.
lookupTweets: %(stagingDir)s/lookupTweets.csv
# Output path for the searchAndStoreTweets utility.
searchTweets: %(stagingDir)s/searchTweets.csv


[Scraper]
# Influencer scraper utility configuration.

# Location to output text files.
outputDir: %(appDir)s/var/lib/influencer_scraper

# Simulate a real browser to avoiding getting blocked.
# Taken from http://www.useragentstring.com/pages/useragentstring.php?name=Chrome
userAgent: Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36

# Seconds to wait before raising timeout error. As float or int.
# Set as 0 to never timeout.
timeout: 10


[Labels]
# Category or Campaign labels to assign to records when a certain utility
# adds or updates the Profile or Tweet, to indicate the origin of the record.
# These will always be added, regardless of any custom Category or Campaign
# labels which are assigned.
# TODO: Create these as defaults on setting up the db so they can always
# be assumed to exist.

# The Fetch Tweets utility's campaign.
fetchTweets: _FETCH_TWEETS

# The Fetch Profiles utility's category.
fetchProfiles: _FETCH_PROFILE
# The Fetch Profiles utility's influencer category.
influencers: _TOP_INFLUENCER

# The Search and Store Tweets utility's category and campaign.
search: _SEARCH_QUERY

# The Look and Store Tweets utility's category and campaign.
lookupTweets: _LOOKUP_TWEETS


### Credentials

[TwitterAuth]
# Create a Twitter app at https://developer.twitter.com/en/apps
# then use the app's values to set details below in an (unversioned) app.local.conf file.

consumerKey: YOUR_CONSUMER_KEY
consumerSecret: YOUR_CONSUMER_SECRET
accessKey: YOUR_ACCESS_KEY
accessSecret: YOUR_ACCESS_SECRET


[TwitterAccount]
# Details for the account for which the Twitter credentials are valid.
# These are not required for the app to run, but useful if you want
# keep track of which account your Twitter Auth values are for.

handle: yourHandle
mail: yourmail@domain.com
name: My Account Name


### Places and Trends

[tests]
# Location settings.
countryName: South Africa
countryWoeid: 23424942
cityName: Cape Town
cityWoeid: 1591691
# Profile settings.
handle:


[TrendCron]
# Cronjob settings for trends.

# Single default country to look up. This can be deprecated after PlaceJob
# section is implemented fully. Or adjusted to be users own country
# for cron and searches.
countryName: South Africa
countryWoeid: 23424942


# Minimum number of seconds allowed between each trend Twitter API call,
# in order to prevent hitting API rate limits. (There may be no real
# benefit for waiting like this since tweep's waiting is already set on.)
# If an insert action (including request from the API and adding to the db)
# takes less than N seconds, then our app will wait for the balance
# of seconds. If the action took more then N seconds, we do not need to do
# anything.
# The API restriction for trends is a max of 75 trend calls in a 15 min window,
# which is 5 requests a minute, or 12 seconds allowed between each request.
# Therefore waiting is applied between calls, to reduce the load.
# If the limit is reached, then the app has to wait (this is built
# into tweepy as a configuration).
# Set as zero for no limit applied. Then queries are done quicker
# initially, which is good for a low volume query, but for high volume
# your Twitter token is likely to be rate limited in that window and each
# one after.
minSeconds: 12
# A job will not run if it was run today within the past N hours, since
# we consider the data recent enough.
# Not that issues may be experienced if the total length of the job session
# to complete all jobs is longer than the interval between job sessions.
# Therefore the interval should not be a lower number.
interval: 6


[PlaceJob]
# Place Job table default values.

# The following values can be used to create rows in the PlaceJob table
# in a batch command, provided that the places have been added as Places
# records. See the Job Manager file.

# Default values here set based on the application author's preferences
# for finding tweets, which tends towards English-speaking areas in
# first world countries.  Note that due to lists being used in single strings,
# the entire value has to be overwritten even to change just one row.


# Countries to be added to job list.
countries:
    United States
    Canada

    South Africa
    Australia

    New Zealand
    Ireland

    United Kingdom
    France
    Italy
    Germany
    Spain


# Countries for the towns should be added to job list.
# Use the tree query to see how many towns a country has before adding it.
townsForCountries:
    South Africa


# Towns to be added to job list.
towns:
    Washington
    New York
    Seattle
    Houston

    Montreal

    Sydney
    London

    Paris
    Dublin
    Berlin
    Geneva

    Rio de Janeiro
    Buenos Aires
